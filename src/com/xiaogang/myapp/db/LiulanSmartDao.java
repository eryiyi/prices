package com.xiaogang.myapp.db;

import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteStatement;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.Property;
import de.greenrobot.dao.internal.DaoConfig;


// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
/** 
 * DAO for table LIULAN_SMART.
*/
public class LiulanSmartDao extends AbstractDao<LiulanSmart, String> {

    public static final String TABLENAME = "LIULAN_SMART";

    /**
     * Properties of entity LiulanSmart.<br/>
     * Can be used for QueryBuilder and for referencing column names.
    */
    public static class Properties {
        public final static Property Goods_id = new Property(0, String.class, "goods_id", true, "GOODS_ID");
        public final static Property Emp_id = new Property(1, String.class, "emp_id", false, "EMP_ID");
        public final static Property Goods_name = new Property(2, String.class, "goods_name", false, "GOODS_NAME");
        public final static Property Goods_cover = new Property(3, String.class, "goods_cover", false, "GOODS_COVER");
        public final static Property Sell_price = new Property(4, String.class, "sell_price", false, "SELL_PRICE");
    };

    private DaoSession daoSession;


    public LiulanSmartDao(DaoConfig config) {
        super(config);
    }
    
    public LiulanSmartDao(DaoConfig config, DaoSession daoSession) {
        super(config, daoSession);
        this.daoSession = daoSession;
    }

    /** Creates the underlying database table. */
    public static void createTable(SQLiteDatabase db, boolean ifNotExists) {
        String constraint = ifNotExists? "IF NOT EXISTS ": "";
        db.execSQL("CREATE TABLE " + constraint + "'LIULAN_SMART' (" + //
                "'GOODS_ID' TEXT PRIMARY KEY NOT NULL ," + // 0: goods_id
                "'EMP_ID' TEXT NOT NULL ," + // 1: emp_id
                "'GOODS_NAME' TEXT NOT NULL ," + // 2: goods_name
                "'GOODS_COVER' TEXT NOT NULL ," + // 3: goods_cover
                "'SELL_PRICE' TEXT NOT NULL );"); // 4: sell_price
    }

    /** Drops the underlying database table. */
    public static void dropTable(SQLiteDatabase db, boolean ifExists) {
        String sql = "DROP TABLE " + (ifExists ? "IF EXISTS " : "") + "'LIULAN_SMART'";
        db.execSQL(sql);
    }

    /** @inheritdoc */
    @Override
    protected void bindValues(SQLiteStatement stmt, LiulanSmart entity) {
        stmt.clearBindings();
        stmt.bindString(1, entity.getGoods_id());
        stmt.bindString(2, entity.getEmp_id());
        stmt.bindString(3, entity.getGoods_name());
        stmt.bindString(4, entity.getGoods_cover());
        stmt.bindString(5, entity.getSell_price());
    }

    @Override
    protected void attachEntity(LiulanSmart entity) {
        super.attachEntity(entity);
        entity.__setDaoSession(daoSession);
    }

    /** @inheritdoc */
    @Override
    public String readKey(Cursor cursor, int offset) {
        return cursor.getString(offset + 0);
    }    

    /** @inheritdoc */
    @Override
    public LiulanSmart readEntity(Cursor cursor, int offset) {
        LiulanSmart entity = new LiulanSmart( //
            cursor.getString(offset + 0), // goods_id
            cursor.getString(offset + 1), // emp_id
            cursor.getString(offset + 2), // goods_name
            cursor.getString(offset + 3), // goods_cover
            cursor.getString(offset + 4) // sell_price
        );
        return entity;
    }
     
    /** @inheritdoc */
    @Override
    public void readEntity(Cursor cursor, LiulanSmart entity, int offset) {
        entity.setGoods_id(cursor.getString(offset + 0));
        entity.setEmp_id(cursor.getString(offset + 1));
        entity.setGoods_name(cursor.getString(offset + 2));
        entity.setGoods_cover(cursor.getString(offset + 3));
        entity.setSell_price(cursor.getString(offset + 4));
     }
    
    /** @inheritdoc */
    @Override
    protected String updateKeyAfterInsert(LiulanSmart entity, long rowId) {
        return entity.getGoods_id();
    }
    
    /** @inheritdoc */
    @Override
    public String getKey(LiulanSmart entity) {
        if(entity != null) {
            return entity.getGoods_id();
        } else {
            return null;
        }
    }

    /** @inheritdoc */
    @Override    
    protected boolean isEntityUpdateable() {
        return true;
    }
    
}
